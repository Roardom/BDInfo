name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.x
    - name: Add organization git
      run: dotnet nuget add source --username Sonic3R --password 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 --store-password-in-clear-text --name github "https://nuget.pkg.github.com/dotnetcorecorner/index.json"
    - name: Restore dependencies
      run: dotnet restore BDInfo.Core/BDInfo.Core.sln
    - name: Build against errors
      run: dotnet build BDInfo.Core/BDInfo.Core.sln --no-restore     
    - name: Create self-contained binary for BDInfo
      run: dotnet publish BDInfo.Core/BDInfo/BDInfo.csproj -c Release -r linux-x64 --self-contained
    - name: Create self-contained binary for BDExtractor
      run: dotnet publish BDInfo.Core/BDExtractor/BDExtractor.csproj -c Release -r linux-x64 --self-contained
      
    - name: BDInfo Zip Release
      # You may pin to the exact commit or the version.
      # uses: TheDoctor0/zip-release@591e9b128012d3328db6043d0d0266c3ac27f9b5
      uses: TheDoctor0/zip-release@0.6.1
      with:
        # Filename for archive
        filename: bdinfo.zip
        # Base path for archive files
        path: BDInfo.Core/BDInfo/bin/Release/netcoreapp3.1/linux-x64/publish
        # Working directory before zipping
        directory: .
        # List of excluded files / directories
        #exclusions: # optional, default is 
        # Tool to use for archiving
        type: zip
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./bdinfo.zip
        asset_name: bdinfo.zip
        asset_content_type: application/zip
